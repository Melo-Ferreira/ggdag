% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/drelationship.R
\name{Assess D-separation between variables}
\alias{Assess D-separation between variables}
\alias{node_dconnected}
\alias{node_dseparated}
\alias{node_drelationship}
\alias{ggdag_drelationship}
\alias{ggdag_dseparated}
\alias{ggdag_dconnected}
\title{D-relationship between variables}
\usage{
node_dconnected(.tdy_dag, from, to, controlling_for = NULL,
  as_factor = TRUE, ...)

node_dseparated(.tdy_dag, from, to, controlling_for = NULL,
  as_factor = TRUE)

node_drelationship(.tdy_dag, from, to, controlling_for = NULL,
  as_factor = TRUE)

ggdag_drelationship(.tdy_dag, from, to, controlling_for = NULL, ...)

ggdag_dseparated(.tdy_dag, from, to, controlling_for = NULL, ...)

ggdag_dconnected(.tdy_dag, from, to, controlling_for = NULL, ...)
}
\arguments{
\item{.tdy_dag}{input graph, an object of class \code{tidy_dagitty} or
\code{dagitty}}

\item{from}{a character vector, the starting variable (must by in DAG)}

\item{to}{a character vector, the ending variable (must by in DAG)}

\item{controlling_for}{a character vector, variables in the DAG to control for.}

\item{as_factor}{logical. Should the \code{d_relationship} variable be a factor?}

\item{...}{additional arguments passed to \code{tidy_dagitty()}}
}
\value{
a \code{tidy_dagitty} with an \code{d_relationship} column for
  variable D relationship or a \code{ggplot}
}
\description{
D-relationship
}
\examples{
dag <- dagify(m ~ x + y)
dag \%>\% ggdag_drelationship("x", "y")
dag \%>\% ggdag_drelationship("x", "y", controlling_for = "m")

dag \%>\%
  node_dseparated("x", "y") \%>\%
  ggplot(aes(x = x, y = y, xend = xend, yend = yend, shape = adjusted, col = d_relationship)) +
  geom_dag_edges() +
  geom_dag_collider_edges() +
  geom_dag_node() +
  geom_dag_text(col = "white") +
  theme_dag() + scale_dag()

dag \%>\%
  node_dconnected("x", "y", controlling_for = "m") \%>\%
  ggplot(aes(x = x, y = y, xend = xend, yend = yend, shape = adjusted, col = d_relationship)) +
  geom_dag_edges() +
  geom_dag_collider_edges() +
  geom_dag_node() +
  geom_dag_text(col = "white") +
  theme_dag() +
  scale_dag()

dagify(m ~ x + y, m_jr ~ m) \%>\%
  tidy_dagitty(layout = "nicely") \%>\%
  node_dconnected("x", "y", controlling_for = "m_jr") \%>\%
  ggplot(aes(x = x, y = y, xend = xend, yend = yend, shape = adjusted, col = d_relationship)) +
  geom_dag_edges() +
  geom_dag_collider_edges() +
  geom_dag_node() +
  geom_dag_text(col = "white") +
  theme_dag() +
  scale_dag()
}
