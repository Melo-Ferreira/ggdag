% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/paths.R
\name{Pathways}
\alias{Pathways}
\alias{dag_paths}
\alias{ggdag_paths}
\alias{ggdag_paths_fan}
\title{Find Pathways Between Variables}
\usage{
dag_paths(.dag, from = NULL, to = NULL, adjust_for = NULL,
  directed = FALSE, ...)

ggdag_paths(.tdy_dag, from = NULL, to = NULL, adjust_for = NULL,
  directed = FALSE, ..., node_size = 16, text_size = 3.88,
  text_col = "white", node = TRUE, text = TRUE, use_labels = NULL)

ggdag_paths_fan(.tdy_dag, from = NULL, to = NULL, adjust_for = NULL,
  directed = FALSE, ..., spread = 0.7, node_size = 16, text_size = 3.88,
  text_col = "white", node = TRUE, text = TRUE, use_labels = NULL)
}
\arguments{
\item{.dag, .tdy_dag}{input graph, an object of class \code{tidy_dagitty} or
\code{dagitty}}

\item{from}{character vector of length 1, name of exposure variable.
Default is \code{NULL}, in which case it will check the input DAG for
exposure.}

\item{to}{character vector of length 1, name of exposure variable.
Default is \code{NULL}, in which case it will check the input DAG for
exposure.}

\item{adjust_for}{character vector, a set of variables to control for.
Default is \code{NULL}.}

\item{directed}{logical. Should only directed paths be shown?}

\item{...}{additional arguments passed to \code{tidy_dagitty()}}

\item{node_size}{size of DAG node}

\item{text_size}{size of DAG text}

\item{text_col}{color of DAG text}

\item{node}{logical. Should nodes be included in the DAG?}

\item{text}{logical. Should text be included in the DAG?}

\item{use_labels}{a string. Variable to use for}

\item{spread}{the width of the fan spread
\code{geom_dag_repel_label()}. Default is \code{NULL}.}
}
\value{
a \code{tidy_dagitty} with a \code{path} column for
  path variables and a \code{set} grouping column or a \code{ggplot}
}
\description{
\code{node_paths} finds the pathways between a given exposure and
outcome. \code{ggdag_paths} plots all pathways. See
\code{dagitty::\link[dagitty]{paths}} for details.
}
\examples{
dag  <- dagify(y ~ x + z2 + w2 + w1,
  x ~ z1 + w1,
  z1 ~ w1 + v,
  z2 ~ w2 + v,
  w1 ~~ w2, exposure = "x", outcome = "y")

  dag \%>\%
    tidy_dagitty(layout = "fr") \%>\%
    ggdag_paths()

}
