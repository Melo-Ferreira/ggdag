% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/status.R
\name{Variable Status}
\alias{Variable Status}
\alias{node_status}
\alias{ggdag_status}
\title{Find variable status}
\usage{
node_status(.dag, as_factor = TRUE, ...)

ggdag_status(.tdy_dag, ..., node_size = 16, text_size = 3.88,
  text_col = "white", node = TRUE, text = TRUE, use_labels = NULL)
}
\arguments{
\item{.dag, .tdy_dag}{input graph, an object of class \code{tidy_dagitty} or
\code{dagitty}}

\item{as_factor}{treat \code{status} variable as factor}

\item{...}{additional arguments passed to \code{tidy_dagitty()}}

\item{node_size}{size of DAG node}

\item{text_size}{size of DAG text}

\item{text_col}{color of DAG text}

\item{node}{logical. Should nodes be included in the DAG?}

\item{text}{logical. Should text be included in the DAG?}

\item{use_labels}{a string. Variable to use for
\code{geom_dag_repel_label()}. Default is \code{NULL}.}
}
\value{
a \code{tidy_dagitty} with a \code{status} column for
  variable status or a \code{ggplot}
}
\description{
Detects variable status given a DAG (exposure, outcome, latent). See
\code{dagitty::\link[dagitty]{VariableStatus}} for details.
}
\details{
\code{node_collider} tags variable status and \code{ggdag_collider} plots all
variable statuses.
}
\examples{
dag <- dagify(l ~ x + y,
  y ~ x,
  exposure = "x",
  outcome = "y",
  latent = "l")

node_status(dag)
ggdag_status(dag)

}
